{"version":3,"sources":["components/NewPost.module.css","components/Navbar.module.css","components/PostThumbnail.module.css","components/App.module.css","components/Header.module.css","components/utils/publicUrl.js","components/Header.js","components/Navbar.js","components/Post.js","components/utils/timespan.js","components/Home.js","components/Explore.js","components/FileLoader.js","components/NewPost.js","components/Activity.js","components/PostThumbnail.js","components/Profile.js","components/utils/initialStore.js","components/utils/uniqueId.js","components/App.js","serviceWorker.js","index.js","components/Post.module.css","components/Profile.module.css"],"names":["module","exports","assetPath","process","Header","className","css","header","src","publicUrl","alt","Navbar","props","navbar","navItem","to","Post","useState","comment","setComment","toggleComment","setToggleComment","topInfo","profPic","user","photo","username","key","id","concat","postPic","post","likesNComments","likes","self","onClick","console","log","onLike","onUnlike","e","likeCount","count","caption","userId","desc","comments","map","item","datetime","text","addComment","onSubmit","event","onComment","preventDefault","type","placeholder","value","onChange","target","timePosted","date","seconds","Math","floor","Date","interval","Home","store","postId","useParams","posts","undefined","filter","findUser","users","find","findComments","findLikes","postLikes","like","some","currentUserId","length","sort","a","b","Explore","FileLoader","handleDragEnter","bind","handleDrop","handleDragOver","handleDragLeave","stopPropagation","this","onDrop","dragTargetSaved","onDragEnter","dataTransfer","types","includes","onDragOver","onDragLeave","child","React","Children","only","children","cloneElement","PureComponent","NewPost","dragging","setDragging","setDesc","setPhoto","error","setError","history","useHistory","message","files","file","size","match","reader","FileReader","onloadend","result","readAsDataURL","dropArea","join","actions","goBack","addPost","push","Activity","PostThumbnail","square","content","image","Profile","u","followers","pairing","following","followerId","isFollowing","pair","topinfo","unfollowBtn","onUnfollow","followBtn","onFollow","bio","name","info","email","prefix","valueOf","toString","milliseconds","start","getTime","i","sleep","App","initialStore","setStore","basename","path","newpair","newpost","uniqueId","toISOString","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3878926a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"NewPost_photo__2GXN3\",\"dropArea\":\"NewPost_dropArea__1QAEl\",\"dragging\":\"NewPost_dragging__3GXy5\",\"message\":\"NewPost_message__3BUtG\",\"image\":\"NewPost_image__2e7fR\",\"desc\":\"NewPost_desc__lYGQI\",\"actions\":\"NewPost_actions__1uqzu\",\"error\":\"NewPost_error__3yRfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__31-FB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"PostThumbnail_square__1mMZc\",\"content\":\"PostThumbnail_content__23flp\",\"image\":\"PostThumbnail_image__3J_3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2s_Fq\",\"App-logo\":\"App_App-logo__1OUG0\",\"App-logo-spin\":\"App_App-logo-spin__3jj4e\",\"App-header\":\"App_App-header__3TyHG\",\"App-link\":\"App_App-link__1zUGJ\",\"content\":\"App_content__1dlDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\"};","// utils/publicUrl.js\nexport default (assetPath)=>{\n    return process.env.PUBLIC_URL+assetPath;\n}","import React from 'react';\nimport css from './Header.module.css';\nimport publicUrl from 'components/utils/publicUrl';\n\nfunction Header() {\n\n  return (\n    <div className={css.header}>\n      <div>\n        <button>\n          <img src={publicUrl('/assets/camera.svg')} alt=\"Camera\"/>\n        </button>\n      </div>\n      <div>\n        <button>\n          <img src={publicUrl('/assets/logo.png')} alt=\"Logo\"/>\n        </button>\n      </div>\n      <div>\n        <button>\n          <img src={publicUrl('/assets/message.svg')} alt=\"Message\"/>\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Header;\n/*function Navbar() {\n\n    return (\n        <nav className={css.navbar}>\n            <div className={css.navItem}>\n                <button>\n                    <img src={('/assets/home.svg')} alt=\"Home\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button>\n                    <img src={publicUrl('/assets/explore.svg')} alt=\"Explore\"/>\n                </button>\n            </div>\n\t\t\t\t\t\t...\n        </nav>\n    );\n}*/","import React from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport css from './Navbar.module.css';\nimport publicUrl from 'components/utils/publicUrl';\n\nfunction Navbar(props) {//props is a function passed from App        \n    return (\n        <nav className={css.navbar}>\n            <div className={css.navItem}>\n                <Link to=\"/\">\n                    <img src={publicUrl('/assets/home.svg')} alt=\"Home\"/>\n                </Link>\n            </div>\n            <div className={css.navItem}>\n                <Link to=\"/explore\">\n                    <img src={publicUrl('/assets/explore.svg')} alt=\"Explore\"/>\n                </Link>\n            </div>\n            <div className={css.navItem}>\n                <Link to=\"/newpost\">\n                    <img src={publicUrl('/assets/newpost.svg')} alt=\"New Post\"/>\n                </Link>\n            </div>\n            <div className={css.navItem}>\n                <Link to=\"/activity\">\n                    <img src={publicUrl('/assets/like.svg')} alt=\"Like\"/>\n                </Link>\n            </div>\n            <div className={css.navItem}>\n                <Link to=\"/profile\">\n                    <img src={publicUrl('/assets/profile.svg')} alt=\"Profile\"/>\n                </Link>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React, {useState} from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport css from './Post.module.css';\nimport publicUrl from 'components/utils/publicUrl';\nimport date from 'components/utils/timespan';\n\nfunction Post(props) {\n/*props includes use (id, photo), post (id, userID, photo, desc, datetime),\nlikes (self, count), and comments (an array, with each element having a userID and text)*/\n    function handleUnlike(){\n        console.log(\"unlike\")\n        props.onLike(props.post.id);\n    }\n    function handleLike(){\n        console.log(\"like\")\n        props.onUnlike(props.post.id);\n    }\n    function handleSubmitComment(event){\n        props.onComment(props.post.id, comment); // this calls addComment from App.js\n        setComment(''); //reset\n        setToggleComment(false); //close comment box\n        event.preventDefault(); // prevent page refresh\n      }\n    const [comment, setComment] = useState('');\n    const [toggleComment, setToggleComment] = useState(false);\n    return (\n    <div>\n        <div className={css.topInfo}>\n            <img className={css.profPic} src={publicUrl(props.user.photo)} alt=\"profPic\"></img>\n            <Link className={css.username} key={props.user.id} to={\"/profile/\".concat(props.user.id)}>\n                <b>{props.user.id}</b>\n            </Link>\n        </div>\n        <div>\n            <img className={css.postPic} src={publicUrl(props.post.photo)} alt=\"postPic\"></img>\n        </div>\n        <div className={css.likesNComments}>\n            <button>\n\t            {props.likes.self?\n                    <img src={publicUrl('/assets/unlike.svg')} alt='Unlike Action' onClick={handleUnlike}/> \n                    :\n\t\t            <img src={publicUrl('/assets/like.svg')} alt='Like Action' onClick={handleLike}/> \n\t            }\n            </button>\n            <button onClick={e=>setToggleComment(!toggleComment)}>\n                <img src={publicUrl('/assets/comment.svg')} alt='Comment Action'/> \n            </button>\n        </div>\n        <div className={css.likeCount}>\n            <b>{props.likes.count} likes</b>\n        </div>\n        <div className={css.caption}>\n            <b>{props.post.userId}</b> {props.post.desc}\n        </div>\n        {props.comments.map(item => {\n                return(\n                    <div key={item.datetime} className={css.comment}>\n                        <b>{item.userId}</b> {item.text}\n                    </div>\n                );\n            }\n        )}\n        {toggleComment && <form className={css.addComment} onSubmit={handleSubmitComment}>\n            <input type=\"text\" placeholder=\"Add a comment…\" value={comment} onChange={e=>setComment(e.target.value)}/>\n            <button type=\"submit\">Post</button>\n        </form>}\n        <div className={css.timePosted}>\n            {date(props.post.datetime)} ago\n        </div>\n    </div>\n  );\n}\n\nexport default Post;","// return time elapsed \nexport default (date)=>{\n    var seconds = Math.floor((new Date() - new Date(date)) / 1000);\n\n    var interval = Math.floor(seconds / 31556926);\n  \n    if (interval >= 1) {\n      return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from './Navbar.js';\n//import css from './Home.module.css';\n//import publicUrl from 'utils/publicUrl';\nimport Post from './Post';\n\nfunction Home(props) {\n  const store = props.store;\n  let {postId} = useParams();\n  const posts = postId===undefined? store.posts:store.posts.filter(post => post.id === postId);\n\n  function findUser(post){\n    return store.users.find(user=>user.id===post.userId);\n  }\n  \n  function findComments(post){\n  return store.comments.filter(comment=>comment.postId===post.id);\n  }\n  \n  function findLikes(post){\n  let postLikes = store.likes.filter(like=>like.postId===post.id);\n  return {\n    self: postLikes.some(like=> like.userId===store.currentUserId),\n    count: postLikes.length\n  }\n  }\n  return (\n  <div>\n      {posts.sort((a,b)=>new Date(b.datetime) - new Date(a.datetime))\n      .map(post=>\n\t\t\t\t<Post\n\t        key={post.id}\n\t        user={findUser(post, store)}\n\t        post={post}\n\t        comments={findComments(post, store)}\n          likes={findLikes(post, store)}\n          onLike={props.onLike}\n          onUnlike={props.onUnlike}\n          onComment={props.onComment} \n\t      />)}\n        <Navbar/>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport Navbar from './Navbar.js';\n//import css from './Explore.module.css';\n//import publicUrl from 'utils/publicUrl';\n\nfunction Explore() {\n  return (\n    <div>\n      Explore     \n      <Navbar/>  \n    </div>\n  );\n}\n\nexport default Explore;","  \nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nclass FileLoader extends PureComponent {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.handleDragEnter = this.handleDragEnter.bind(this);\n\t\tthis.handleDrop = this.handleDrop.bind(this);\n\t\tthis.handleDragOver = this.handleDragOver.bind(this);\n\t\tthis.handleDragLeave = this.handleDragLeave.bind(this);\n\t}\n\thandleDrop(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDrop){\n\t\t\tthis.props.onDrop(e);\n\t\t}\n\t}\n\thandleDragEnter(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis.dragTargetSaved=e.target;\n\t\tif (this.props.onDragEnter){\n\t\t\tthis.props.onDragEnter(e);\n\t\t}\n\t}\n\thandleDragOver(e){\n\t\tif (e.dataTransfer.types.includes('Files')===false){\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragOver){\n\t\t\tthis.props.onDragOver(e);\n\t\t}\n\t}\n\thandleDragLeave(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragLeave &&  this.dragTargetSaved===e.target){\n\t\t\tthis.props.onDragLeave(e);\n\t\t}\n\t}\n\n\trender () {\n\t\tlet child = React.Children.only(this.props.children);\n\t\treturn  React.cloneElement(child,\n\t\t\t{\t\n\t\t\t\tonDragEnter: this.handleDragEnter,\n\t\t\t\tonDragOver: this.handleDragOver,\n\t\t\t\tonDragLeave: this.handleDragLeave,\n\t\t\t\tonDrop: this.handleDrop\n\n\t\t\t});\n\t\n\t}\n}\n\nFileLoader.propTypes = {\n\tonDrop:PropTypes.func,\n\tonDragEnter:PropTypes.func,\n\tonDragOver:PropTypes.func,\n\tonDragLeave:PropTypes.func,\n\tchildren:PropTypes.element.isRequired,\n};\n\nexport default FileLoader;","import React, { useState } from 'react';\nimport css from './NewPost.module.css';\nimport FileLoader from './FileLoader.js';\nimport {\n  useHistory\n} from \"react-router-dom\";\n/*\n      store={store}\n      addPost={addPost}\n      cancelPost={cancelPost}\n*/\nfunction NewPost(props) {\n  const [dragging, setDragging] = useState(false); // to show a dragging effect\n  const [desc, setDesc] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [error, setError] = useState(''); // to show an error message\n  const history = useHistory();\n  function handleFileDragEnter(e){\n    setDragging(true);\n  }\n  function handleFileDragLeave(e){\n    setDragging(false);\n  }\n  function handleFileDrop(e){\n    if (e.dataTransfer.types.includes('Files')===false){\n\t\t\treturn;\n    }\n    if (e.dataTransfer.files.length>=1){\n      let file = e.dataTransfer.files[0];\n      if (file.size>1000000){// larger than 1 MB\n        return;\n      }\n      if (file.type.match(/image.*/)){\n\t\t\t\tlet reader = new FileReader();\t\t\t\n\t\t\t\treader.onloadend = (e) => {\n          setPhoto(e.target.result)\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t}\n    }\n    setDragging(false);    \n  }\n  function handleDescChange(e){\n\t\tsetDesc(e.target.value);\n  }\n  function handleSubmit(e){\n\t\t// TODO:\n\t\te.preventDefault();\n\t\t// 2. Show error msg if failed and exit\n\t\tprops.addPost(photo, desc)\n    setError('');\n    history.push('/');\n  }\n  function handleCancel(){\n    history.goBack();\n  }\n  return (\n    <div>\n        <div className={css.photo}>\n          {!photo?  <div className={css.message}>Drop your image</div>:\n                    <img src={photo} alt=\"New Post\"/>}\n            <FileLoader\n              onDragEnter={handleFileDragEnter}\n              onDragLeave={handleFileDragLeave}\n              onDrop={handleFileDrop}\n            >\n\t            <div className={[css.dropArea, dragging?css.dragging:null].join(' ')}\n              ></div>\n\t          </FileLoader>\n          \n        </div>\n        <div className={css.desc} >\n        <textarea value={desc} onChange={handleDescChange}></textarea>\n        </div>\n        <div className={css.error}>\n\t\t\t\t\t{error}\n        </div>\n        <div className={css.actions}>\n          <button onClick={handleCancel}>Cancel</button>\n          <button onClick={handleSubmit}>Share</button>          \n        </div>\n    </div>\n  );\n}\n\nexport default NewPost;","import React from 'react';\nimport Navbar from './Navbar.js';\n//import css from './Activity.module.css';\n//import publicUrl from 'utils/publicUrl';\n\nfunction Activity() {\n  return (\n    <div>\n      Activity  \n      <Navbar/>     \n    </div>\n  );\n}\n\nexport default Activity;","import React from 'react';\nimport css from './PostThumbnail.module.css';\nimport publicUrl from 'components/utils/publicUrl';\n\nfunction PostThumbnail(props) {\n  return (\n    <div className={css.square}>\n      <div className={css.content}>\n        <img className={css.image} src={publicUrl(props.photo)} alt=\"Post Thumbnail\"/>\n      </div>\n        \n    </div>\n  );\n}\n\nexport default PostThumbnail;","import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport Navbar from './Navbar.js';\nimport css from './Profile.module.css';\nimport publicUrl from 'components/utils/publicUrl';\nimport PostThumbnail from './PostThumbnail';\nfunction Profile(props) {\n  let {userId} = useParams();\n  const username = userId===undefined? props.store.currentUserId : userId;\n  const user = props.store.users.filter(u => u.id===username)[0];\n  const posts = props.store.posts.filter(post=>(post.userId===username));\n  const followers = (props.store.followers.filter(pairing=>(pairing.userId===username))).length;\n  const following = (props.store.followers.filter(pairing=>(pairing.followerId===username))).length;\n  let isFollowing = props.store.followers.some(pair => pair.userId===username&& pair.followerId===props.store.currentUserId );\n  console.log(isFollowing);\n  console.log(props.store.followers);\n\n  function handleFollow(){\n    console.log(\"follow\")\n    props.onFollow(username, props.store.currentUserId);\n    console.log(props.store.followers);\n  }\n  function handleUnfollow(){\n    console.log(\"unfollow\")\n    props.onUnfollow(username, props.store.currentUserId);\n    console.log(props.store.followers);\n  }\n\n  return (\n    <div>\n      <div className={css.topinfo}>\n        <img className={css.profPic} src={publicUrl(user.photo)} alt=\"profPic\"></img>\n        <b className={css.username}>{user.id}</b>\n        {isFollowing?\n        <button className={css.unfollowBtn} onClick={handleUnfollow}>\n          Unfollow\n        </button>\n        :<button className={css.followBtn} onClick={handleFollow}>\n        Follow\n      </button>\n        }\n      </div>\n       <div className={css.bio}>\n        <b>{user.name}</b><br></br>\n        {user.bio}\n       </div>\n       <div className={css.info}>\n         <p>\n           {posts.length} posts\n         </p>\n         <p>\n           {followers} followers\n         </p>\n         <p>\n          {following} following\n         </p>\n       </div>\n       <div className={css.posts}>\n        {posts.sort((a,b)=>new Date(b.datetime) - new Date(a.datetime))\n        .map(post=>\n          <Link key={post.id} to={\"/\".concat(post.id)}>\n            <PostThumbnail photo={post.photo}/>\n          </Link>)}\n      </div>\n      <Navbar/>\n    </div>\n  );\n}\n\nexport default Profile;","/* sample data store*/\nexport default { \n    currentUserId: \"judy\",\n    users:[\n        {\n            id:\"judy\",\n            email:\"judy@bc.edu\",\n            photo:\"/assets/user1.png\",\n            name: \"Judy Hopps\",\n            bio:\"The first rabbit officer of the Zootopia Police Department. Judy is determined to make the world a better place while breaking preconceptions about other species.\",\n            \n        },\n        {\n            id:\"nick\",\n            email:\"nick@bc.edu\",\n            photo:\"/assets/user2.png\",\n            name:\"Nick Wilde\",\n            bio:\"Nick is a charming, small-time, con artist fox with a big mouth and a lot of opinions. But when a rabbit cop outsmarts him, he finds himself actually helping her solve a mystery.\"\n        },\n\n        {\n            id:\"flash\",\n            email:\"flash@bc.edu\",\n            photo:\"/assets/user3.png\",\n            name: \"Flash Slothmore\",\n            bio:\"Flash is a male three-toed sloth and a supporting character in Zootopia. He works at the Department of Mammal Vehicles.\",\n            \n        }\n    ],\n    followers:[\n        {\n            userId:\"nick\",\n            followerId:\"judy\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"nick\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"flash\"\n        }\n    ],\n    posts:[\n        {   \n            id:\"post-1\",\n            userId:\"judy\",\n            photo:\"/assets/post1.png\",\n            desc:\"#zootopia #excited\",\n            datetime: \"2020-02-09T22:45:28Z\",   \n\n        },\n        {\n            id:\"post-2\",\n            userId:\"nick\",\n            photo:\"/assets/post2.png\",\n            desc:\"#happy #selfie with Judy\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-3\",\n            userId:\"flash\",\n            photo:\"/assets/post3.png\",\n            desc:\"Don't worry I got this\",\n            datetime: \"2020-02-03T22:45:28Z\",\n        },\n        {\n            id:\"post-4\",\n            userId:\"judy\",\n            photo:\"/assets/post4.png\",\n            desc:\"Just trying to make a #friend\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-5\",\n            userId:\"judy\",\n            photo:\"/assets/post5.png\",\n            desc:\"I am now the first rabbit officer!\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-6\",\n            userId:\"judy\",\n            photo:\"/assets/post6.png\",\n            desc:\"Having #goodtimes with folks here\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n    ],\n    comments:[\n        {\n            userId:\"nick\",\n            postId:\"post-1\",\n            text:\"Welcome to Zootopia!\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            text:\"Thanks!😁Looking forward to meeting you!\", \n            datetime:\"2020-02-09T22:52:01Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            text:\"Looking good you two! 🐰🦊\", \n            datetime:\"2020-02-09T22:54:20Z\"\n        }\n    ],\n    likes:[\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            datetime:\"2020-02-09T22:50:40Z\"\n        },\n        {\n            userId:\"nick\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:54:20Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-3\",\n            datetime:\"2020-02-09T22:53:40Z\"\n        }\n    ]\n}\n\n","  \nfunction sleep(milliseconds) {\n\tvar start = new Date().getTime();\n\tfor (var i = 0; i < 1e7; i++) {\n\t\tif ((new Date().getTime() - start) > milliseconds){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default (prefix) => { // TODO use shortid \n\tlet id = new Date().valueOf().toString(36);\n\tsleep(1);// wait for one millisecond\n\treturn (prefix ? prefix + id\t: id);\n};","import React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport css from './App.module.css';\n\nimport Header from './Header.js';\nimport Home from './Home.js';\nimport Explore from './Explore.js';\nimport NewPost from './NewPost.js';\nimport Activity from './Activity.js';\nimport Profile from './Profile';\n\nimport initialStore from 'components/utils/initialStore';\nimport uniqueId from 'components/utils/uniqueId';\n\nfunction App(){\n  const [store, setStore] = useState(initialStore);\n  //console.log(store);\n  function addLike(postId){\n    const like = {\n        userId: store.currentUserId, \n        postId,\n        datetime: new Date().toISOString()\n    };\n    \n    setStore({\n      ...store,\n      likes:store.likes.concat(like)\n    });\n  }\n  function removeLike(postId){\n    setStore({\n      ...store,\n      //the spread simply passes the attributes of store that are not changed (so all but likes) into the new store so that the store isn't overwritten only to contain likes\n      likes: store.likes.filter(like=>!(like.userId===store.currentUserId && like.postId===postId))\n    });\n  }\n  function addComment(postId, text){\n    const comment = {\n      userId: store.currentUserId, \n      postId,\n      text,\n      datetime: new Date().toISOString()\n    };\n    setStore({\n      ...store,\n        comments:store.comments.concat(comment)\n    });\n  }\n  function addPost(photo, desc){\n    console.log(photo,'PHOTO')\n    const newpost ={\n      id: uniqueId('post'),\n      userId : store.currentUserId,\n      photo,\n      desc,\n      datetime: new Date().toISOString()\n    }\n    console.log(newpost, 'newPOST')\n    console.log(store.posts)\n    setStore({\n      ...store,\n        posts:store.posts.concat(newpost)\n    });\n  }\n  function addFollower(userId, followerId){\n    const newpair = {userId, followerId};\n    setStore({\n      ...store,\n      followers:store.followers.concat(newpair)\n    });\n  }\n  function removeFollower(userId, followerId){\n    setStore({\n      ...store,\n      //the spread simply passes the attributes of store that are not changed (so all but likes) into the new store so that the store isn't overwritten only to contain likes\n      followers: store.followers.filter(pair=>!(pair.userId===userId && pair.followerId===followerId))\n    });\n  }\n\n\n  return (\n\t\t<Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Header/>\n      </div>\n\t\t\t<div className={css.content}>\n        <Switch>\n          <Route path=\"/profile/:userId?\">\n            <Profile \n              store={store}\n              onFollow={addFollower}\n              onUnfollow={removeFollower}/>\n          </Route>\n          <Route path=\"/activity\">\n            <Activity/>\n          </Route>\n          <Route path=\"/explore\">\n            <Explore/>\n          </Route>\n          <Route path=\"/newpost\">\n          <NewPost \n            store={store} \n            addPost={addPost}/>\n          </Route>\n          <Route path=\"/:postId?\">\n          <Home \n            store={store}\n            onUnlike={addLike}\n            onLike={removeLike}\n            onComment={addComment}/>\n          </Route>\n        </Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topInfo\":\"Post_topInfo__1p8U5\",\"username\":\"Post_username__2AcAa\",\"profPic\":\"Post_profPic__3EB6i\",\"postPic\":\"Post_postPic__1nVbS\",\"likesNComments\":\"Post_likesNComments__3fp1i\",\"likeCount\":\"Post_likeCount__2HW9H\",\"caption\":\"Post_caption__epNw6\",\"comment\":\"Post_comment__1cYeu\",\"timePosted\":\"Post_timePosted__1qBvZ\",\"addComment\":\"Post_addComment__aGSqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topInfo\":\"Profile_topInfo__2HHnY\",\"profPic\":\"Profile_profPic__z73Wl\",\"username\":\"Profile_username__2qUJK\",\"bio\":\"Profile_bio__3BO67\",\"info\":\"Profile_info__3Vv7X\",\"posts\":\"Profile_posts__rwx78\",\"followBtn\":\"Profile_followBtn__Ntles\",\"unfollowBtn\":\"Profile_unfollowBtn__1rlHm\"};"],"sourceRoot":""}